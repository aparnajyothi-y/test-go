name: Generate Large Go Cache

on:
  workflow_dispatch:

jobs:
  cache-go:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create big go.mod
        shell: pwsh
        run: |
          @"
          module bigcachetest
          go 1.22

          require (
            k8s.io/kubernetes v1.30.0
            github.com/moby/moby v25.0.0+incompatible
            github.com/hashicorp/terraform v1.5.7
            github.com/aws/aws-sdk-go v1.49.0
            github.com/prometheus/prometheus v2.53.0+incompatible
            github.com/grafana/grafana v11.0.0+incompatible
            github.com/apache/beam v2.56.0+incompatible
            github.com/google/go-containerregistry v0.18.0
            github.com/grpc/grpc-go v1.61.1
            github.com/istio/istio v1.22.0
            github.com/open-telemetry/opentelemetry-collector v0.105.0
            github.com/hashicorp/consul v1.19.0
          )
          "@ | Out-File -Encoding UTF8 go.mod

      - name: Generate go.sum
        shell: pwsh
        run: |
          go mod tidy
          go mod download all
          Get-ChildItem go.sum

      - name: Setup Go with cache
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache: true

      - name: Verify cache size
        shell: pwsh
        run: |
          Write-Host "Go module cache size:"
          Get-ChildItem "$env:GOPATH/pkg/mod" -Recurse | Measure-Object -Property Length -Sum | ForEach-Object { $_.Sum / 1GB }
          Write-Host "Go build cache size:"
          Get-ChildItem "$env:LOCALAPPDATA/go-build" -Recurse | Measure-Object -Property Length -Sum | ForEach-Object { $_.Sum / 1GB }
