name: Reproduce Slow Cache Restore on Windows

on:
  workflow_dispatch:

jobs:
  reproduce-windows-cache-slow:
    name: Windows Cache Slow
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Force old slow cache locations
      - name: Override Go cache locations (C drive)
        run: |
          echo "GOCACHE=$env:USERPROFILE\AppData\Local\go-build" >> $env:GITHUB_ENV
          echo "GOMODCACHE=$env:USERPROFILE\go\pkg\mod" >> $env:GITHUB_ENV

      # Step 2: Setup Go
      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      # Step 3: Create large go.mod to download ~1.7 GB of deps
      - name: Create large dependency file
        shell: pwsh
        run: |
          @"
          module bigcachetest
          go 1.22

          require (
            k8s.io/kubernetes v1.30.0
            github.com/moby/moby v25.0.0+incompatible
            github.com/hashicorp/terraform v1.5.7
            github.com/aws/aws-sdk-go v1.49.0
            github.com/prometheus/prometheus v2.53.0+incompatible
            github.com/grafana/grafana v11.0.0+incompatible
            github.com/apache/beam v2.56.0+incompatible
            github.com/google/go-containerregistry v0.18.0
            github.com/grpc/grpc-go v1.61.1
            github.com/istio/istio v1.22.0
            github.com/open-telemetry/opentelemetry-collector v0.105.0
            github.com/hashicorp/consul v1.19.0
          )
          "@ | Out-File -Encoding UTF8 go.mod

      # Step 4: Download all dependencies
      - name: Download Go modules
        run: |
          go mod tidy
          go mod download all

      # Step 5: Check cache directory sizes
      - name: Measure Go cache sizes
        shell: pwsh
        run: |
          $modCache = go env GOMODCACHE
          $buildCache = go env GOCACHE
          Write-Host "📦 Go module cache: $modCache"
          Write-Host "🛠️ Go build cache: $buildCache"
          if (Test-Path $modCache) {
            du -sh $modCache 2>$null || (Get-ChildItem -Recurse $modCache | Measure-Object -Property Length -Sum).Sum
          }
          if (Test-Path $buildCache) {
            du -sh $buildCache 2>$null || (Get-ChildItem -Recurse $buildCache | Measure-Object -Property Length -Sum).Sum
          }

      # Step 6: Save cache manually (for reuse)
      - name: Save Go cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.GOMODCACHE }}
            ${{ env.GOCACHE }}
          key: windows-go-modcache-test-${{ hashFiles('**/go.sum') }}

  reproduce-windows-cache-fast:
    name: Windows Cache Fast (D: drive)
    runs-on: windows-latest
    needs: reproduce-windows-cache-slow

    steps:
      - uses: actions/checkout@v4

      # Step 1: Setup Go (normal fast config)
      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Measure Go cache restore speed
        run: |
          Write-Host "✅ Expect fast restore (< 1 min) from D: drive"
